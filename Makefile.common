# include Makefile

#This file is included in the general Makefile, the libs Makefile and the src Makefile

TOP=$(shell readlink -f "$(dir $(lastword $(MAKEFILE_LIST)))")
PROGRAM_NAME=bin/main
LIBDIR=$(TOP)/libs
STMLIB=$(LIBDIR)/STM32_USB-FS-Device_Lib_V4.0.0/Libraries

TC=/mydata/toolchain/gcc-arm-none-eabi-5_3-2016q1/bin/arm-none-eabi
CC=$(TC)-gcc
LD=$(TC)-ld -v
OBJCOPY=$(TC)-objcopy
AR=$(TC)-ar
GDB=$(TC)-gdb
SIZE_ARM=$(TC)-size

# Device
#STM32F103RBT (128KB FLASH, 20KB RAM) --> STM32F10X_MD
#STM32F103RET (512KB FLASH, 64KB RAM) --> STM32F10X_HD
#STM32F103ZET (512KB FLASH, 64KB RAM) --> STM32F10X_HD
#========================================#
TypeOfMCU=STM32F10X_HD
#========================================#

# supported device for JLinkExe (Linux)
# https://www.segger.com/jlink_supported_devices.html
JLINKEXE_SCRIPT=/tmp/JLinkExe.script
SUPPORTED_DEVICE=STM32F103VE

# include path
INCLUDE+=-I.
INCLUDE+=-I/mydata/toolchain/gcc-arm-none-eabi-5_3-2016q1/arm-none-eabi/include
INCLUDE+=-I$(STMLIB)/CMSIS/Include
INCLUDE+=-I$(STMLIB)/CMSIS/Device/ST/STM32F10x/Include
INCLUDE+=-I$(STMLIB)/CMSIS/Device/ST/STM32F10x/Source/Templates
INCLUDE+=-I$(STMLIB)/STM32F10x_StdPeriph_Driver/inc
INCLUDE+=-I$(STMLIB)/STM32_USB-FS-Device_Driver/inc
INCLUDE+=-I$(TOP)/src/drivers -I$(TOP)/src/stack -I$(TOP)/src/drivers/a7190 -I$(TOP)/src/drivers/pc_control -I$(TOP)/src/drivers/route_table -I$(TOP)/src/demo -I$(TOP)/src/drivers/usb -I$(TOP)/src/drivers/lmx2581 

# symbols or marcos defined
SYMBOLS_DEFINE = -DUSE_GCC_FOR_ARM -DLRWPAN_DEFAULT_START_CHANNEL=44
 

ifeq ($(module),coord)
	SYMBOLS_DEFINE += -DLRWPAN_COORDINATOR 
	ifeq ($(change_addr),1)
		SYMBOLS_DEFINE += -DIEEE_ADDRESS_ARRAY_COORD=$(addr)
	endif
endif

ifeq ($(module),router)
	SYMBOLS_DEFINE += -DLRWPAN_ROUTER
	ifeq ($(change_addr),1)
		SYMBOLS_DEFINE += -DIEEE_ADDRESS_ARRAY_ROUTER=$(addr)
	endif
endif

# output handshake packet details
ifeq ($(mac_debug),1)
	SYMBOLS_DEFINE += -DMAC_OUTPUT_DEBUG
endif

# USART1 replace with USART2, in order to communicate with PC
ifeq ($(usart1_debug),1)
	SYMBOLS_DEFINE += -DUSE_USART1_AS_OUTPUT_DEBUG
endif

COMMONFLAGS=-g -mcpu=cortex-m3 -mthumb
COMMONFLAGSlib=$(COMMONFLAGS)

#Different optimize settings for library and source files can be realized by using arguments
#Compiler optimize settings:
# -O0 no optimize, reduce compilation time and make debugging produce the expected results (default).
# -O1 optimize, reduce code size and execution time, without much increase of compilation time.
# -O2 optimize, reduce code execution time compared to ‘O1’, increase of compilation time.
# -O3 optimize, turns on all optimizations, further increase of compilation time.
# -Os optimize for size, enables all ‘-O2’ optimizations that do not typically increase code size and other code size optimizations.
#Recommended optimize settings for release version: -O3
#Recommended optimize settings for debug version: -O0
#Example:
# make OptLIB=3 OptSRC=0 all tshow

#Commands for general Makefile and src Makefile
ifeq ($(OptSRC),0)
	COMMONFLAGS+=-O0
	InfoTextSrc=src (no optimize, -O0)
else ifeq ($(OptSRC),1)
	COMMONFLAGS+=-O1
	InfoTextSrc=src (optimize time+ size+, -O1)
else ifeq ($(OptSRC),2)
	COMMONFLAGS+=-O2
	InfoTextSrc=src (optimize time++ size+, -O2)
else ifeq ($(OptSRC),s)
	COMMONFLAGS+=-Os
	InfoTextSrc=src (optimize size++, -Os)
else
	COMMONFLAGS+=-O0
	InfoTextSrc=src (full optimize, -O0)
endif

CFLAGS+=$(COMMONFLAGS) $(INCLUDE)
CFLAGS+=-Wunused-function
CFLAGS+=-D $(TypeOfMCU)
CFLAGS+=-D VECT_TAB_FLASH
CFLAGS+=$(SYMBOLS_DEFINE)

#Commands for libs Makefile
ifeq ($(OptLIB),0)
	COMMONFLAGSlib+=-O0
	InfoTextLib=libs (no optimize, -O0)
else ifeq ($(OptLIB),1)
	COMMONFLAGSlib+=-O1
	InfoTextLib=libs (optimize time+ size+, -O1)
else ifeq ($(OptLIB),2)
	COMMONFLAGSlib+=-O2
	InfoTextLib=libs (optimize time++ size+, -O2)
else ifeq ($(OptLIB),s)
	COMMONFLAGSlib+=-Os
	InfoTextLib=libs (optimize size++, -Os)
else
	COMMONFLAGSlib+=-O3
	InfoTextLib=libs (full optimize, -O3)
endif
CFLAGSlib+=$(COMMONFLAGSlib) -Wall -Werror $(INCLUDE)
CFLAGSlib+=-D $(TypeOfMCU)
CFLAGSlib+=-D VECT_TAB_FLASH

